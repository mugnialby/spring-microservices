# APPLICATION CONFIG
server:
  port: 7001
  error:
    include-message: "always"
  bcrypt:
    salt: "$2a$10$XPpFJsWa/UwoSH0Wczxvnu"
jwt:
  key:
    secret: "YjdqN3ZEbGhYanJtODJsUkRKQlZTV0djOTRLWUU0dlY="
    api: "OXdNMndxY2FXZGpaaXloWWdhbzZJbUxsSzFhaExVR1o="
  expiration: 1
spring:
  rabbitmq:
    host: "localhost"
    port: "5672"
    username: "guest"
    password: "guest"

rabbitmq:
  queue:
    authenticate:
      request: "authenticate.request.queue"
      response: "authenticate.response.queue"
    authorization:
      request: "authorization.request.queue"
      response: "authorization.response.queue"
  exchange:
    authenticate: "authenticate.exchange"
    authorization: "authorization.exchange"

# KAFKA CONFIGS
# CONSUMER
#spring.kafka.consumer.bootstrap-servers = localhost:9092
#spring.kafka.consumer.group-id = authgroup
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

# PRODUCER
#kafka.producer.id = authService
#spring.kafka.producer.bootstrap-servers = localhost:9092
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

# TOPICS
#kafka.topic.auth.events = auth.events
#kafka.topic.auth.events.partition = 1

#kafka.topic.user.events = user.events
#kafka.topic.user.events.partition = 1