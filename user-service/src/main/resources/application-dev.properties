# APPLICATION CONFIG
server.port = 8091
server.error.include-message=always

# DEFAULT CONNECTION POOL
spring.datasource.hikari.connectionTimeout = 20000
spring.datasource.hikari.minimum-idle = 5
spring.datasource.hikari.maximumPoolSize = 10

# DATABASE CONNECTION
spring.datasource.url = jdbc:postgresql://localhost:5433/users
spring.datasource.username = postgres
spring.datasource.password = root

# HIBERNATE CONFIGS
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true

# RABBITMQ CONFIGS
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

# RABBITMQ QUEUE
rabbitmq.queue.authenticate.request = authenticate.request.queue
rabbitmq.queue.authenticate.response = authenticate.response.queue

# RABBITMQ EXCHANGE
rabbitmq.exchange.authenticate = authenticate.exchange

# KAFKA CONFIGS
# CONSUMER
#spring.kafka.consumer.bootstrap-servers = localhost:9092
#spring.kafka.consumer.group-id = usergroup
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

# PRODUCER
#spring.kafka.producer.bootstrap-servers = localhost:9092
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

# KAFKA
#kafka.topic.user.events = user.events
#kafka.topic.user.events.partition = 1